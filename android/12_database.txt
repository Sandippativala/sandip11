//activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Student Details"
        android:textSize="28dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.479"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.200" />

    <EditText
        android:id="@+id/editTextId"
        android:layout_width="300dp"
        android:layout_height="50dp"
        android:layout_margin="16dp"
        android:hint="Enter Student ID"
        android:inputType="number"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.325" />

    <EditText
        android:id="@+id/editTextName"
        android:layout_width="300dp"
        android:layout_height="50dp"
        android:layout_below="@id/editTextId"
        android:layout_margin="16dp"
        android:hint="Enter Student Name"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.450" />

    <EditText
        android:id="@+id/editTextAddress"
        android:layout_width="300dp"
        android:layout_height="50dp"
        android:layout_below="@id/editTextName"
        android:layout_margin="16dp"
        android:hint="Enter Student Address"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.575" />

    <Button
        android:id="@+id/buttonInsert"
        android:layout_width="120dp"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:onClick="insert"
        android:text="Insert"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.500"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.725" />

    <Button
        android:id="@+id/buttonRetrieve"
        android:layout_width="120dp"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:onClick="retrieveData"
        android:text="Retrieve"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.10"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.850" />

    <Button
        android:id="@+id/buttonShow"
        android:layout_width="120dp"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:onClick="showData"
        android:text="Search"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.900"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.850" />

</androidx.constraintlayout.widget.ConstraintLayout>

//MainActivity.java

package com.example.twelfth_application;

import androidx.appcompat.app.AppCompatActivity;

import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {
    EditText editTextId, editTextName, editTextAddress;
    Button buttonInsert, buttonRetrieve, buttonShow;

    private Drawable edited;
    private static final String DATABASE_NAME = "student_database";
    private static final String TABLE_NAME = "students";
    private static final String COL_ID = "id";
    private static final String COL_NAME = "name";
    private static final String COL_ADDRESS = "address";
    private static final int DATABASE_VERSION = 1;

    private SQLiteDatabase db;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        editTextId = findViewById(R.id.editTextId);
        editTextName = findViewById(R.id.editTextName);
        editTextAddress = findViewById(R.id.editTextAddress);
        buttonInsert = findViewById(R.id.buttonInsert);
        buttonRetrieve = findViewById(R.id.buttonRetrieve);
        buttonShow = findViewById(R.id.buttonShow);
        edited = editTextId.getBackground();

        DatabaseHelper dbHelper = new DatabaseHelper(this);
        db = dbHelper.getWritableDatabase();

        buttonRetrieve.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                retrieveData();
            }
        });

        buttonShow.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                showData(v);
            }
        });

        buttonInsert.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (validateFields()) {
                    String id = editTextId.getText().toString().trim();
                    String name = editTextName.getText().toString().trim();
                    String address = editTextAddress.getText().toString().trim();

                    ContentValues values = new ContentValues();
                    values.put(COL_ID, id);
                    values.put(COL_NAME, name);
                    values.put(COL_ADDRESS, address);

                    long result = db.insert(TABLE_NAME, null, values);

                    if (result != -1) {
                        Toast.makeText(MainActivity.this, "Data inserted successfully", Toast.LENGTH_SHORT).show();
                        editTextId.setBackgroundDrawable(edited);
                        editTextName.setBackgroundDrawable(edited);
                        editTextAddress.setBackgroundDrawable(edited);
                        editTextId.getText().clear();
                        editTextName.getText().clear();
                        editTextAddress.getText().clear();// This line seems to be clearing editTextName again, which might be a typo
                    } else {
                        Toast.makeText(MainActivity.this, "Failed to insert data", Toast.LENGTH_SHORT).show();
                    }

                }
            }
        });
    }
    private void retrieveData() {
        Cursor cursor = db.rawQuery("SELECT * FROM " + TABLE_NAME, null);
        if (cursor.getCount() == 0) {
            Toast.makeText(MainActivity.this, "No data found", Toast.LENGTH_SHORT).show();
            return;
        }

        String[] ids = new String[cursor.getCount()];
        String[] names = new String[cursor.getCount()];
        String[] addresses = new String[cursor.getCount()];

        int i = 0;
        while (cursor.moveToNext()) {
            ids[i] = cursor.getString(cursor.getColumnIndex("id"));
            names[i] = cursor.getString(cursor.getColumnIndex("name"));
            addresses[i] = cursor.getString(cursor.getColumnIndex("address"));
            i++;
        }

        cursor.close();

        Intent intent = new Intent(MainActivity.this, DisplayDataActivity.class);
        intent.putExtra("ids", ids);
        intent.putExtra("names", names);
        intent.putExtra("addresses", addresses);
        startActivity(intent);
    }

    public void showData(View view) {

        Intent intent = new Intent(this, ShowDataActivity.class);
        startActivity(intent);

    }
    private boolean validateFields() {
        String id = editTextId.getText().toString().trim();
        String name = editTextName.getText().toString().trim();
        String address = editTextAddress.getText().toString().trim();

        if (!name.matches("[a-zA-Z]+")) {
            Toast.makeText(MainActivity.this, "Enter only alphabets as Student Name", Toast.LENGTH_SHORT).show();
            return false;
        }

        if (!address.matches("[a-zA-Z.,\\/-]+")) {
            Toast.makeText(MainActivity.this, "Enter address in proper format", Toast.LENGTH_SHORT).show();
            return false;
        }

        if (id.isEmpty() || name.isEmpty() || address.isEmpty()) {
            Toast.makeText(MainActivity.this, "All fields are required", Toast.LENGTH_SHORT).show();
            return false;
        }

        return true;
    }


    private static class DatabaseHelper extends SQLiteOpenHelper {

        public DatabaseHelper(Context context) {
            super(context, DATABASE_NAME, null, DATABASE_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            String CREATE_TABLE = "CREATE TABLE " + TABLE_NAME + "("
                    + COL_ID + " INTEGER PRIMARY KEY,"
                    + COL_NAME + " TEXT,"
                    + COL_ADDRESS + " TEXT" + ")";
            db.execSQL(CREATE_TABLE);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);

            onCreate(db);
        }
    }
}

//activity_display_data.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <TableLayout
            android:id="@+id/tableLayout"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:stretchColumns="*">

            <TableRow
                android:layout_width="match_parent"
                android:layout_height="wrap_content">

                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="ID"
                    android:textStyle="bold"
                    android:padding="8dp" />

                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="Name"
                    android:textStyle="bold"
                    android:padding="8dp" />

                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="Address"
                    android:textStyle="bold"
                    android:padding="8dp" />


            </TableRow>

        </TableLayout>
    </ScrollView>
</LinearLayout>

//DisplayDataActivity.java

package com.example.twelfth_application;

import androidx.appcompat.app.AppCompatActivity;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.View;
import android.widget.ImageView;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;
import android.widget.Toast;


public class DisplayDataActivity extends AppCompatActivity {

    private static final String TABLE_NAME = "students";
    private SQLiteDatabase db;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_display_data);

        DatabaseHelper dbHelper = new DatabaseHelper(this);
        db = dbHelper.getWritableDatabase();

        Bundle bundle = getIntent().getExtras();
        if (bundle != null) {
            String[] ids = bundle.getStringArray("ids");
            String[] names = bundle.getStringArray("names");
            String[] addresses = bundle.getStringArray("addresses");

            TableLayout tableLayout = findViewById(R.id.tableLayout);
            for (int i = 0; i < ids.length; i++) {
                final String id = ids[i];
                final String name = names[i];
                final String address = addresses[i];

                TableRow row = new TableRow(this);

                TextView idTextView = new TextView(this);
                idTextView.setText(id);
                row.addView(idTextView);

                TextView nameTextView = new TextView(this);
                nameTextView.setText(name);
                row.addView(nameTextView);

                TextView addressTextView = new TextView(this);
                addressTextView.setText(address);
                row.addView(addressTextView);

                ImageView editIcon = new ImageView(this);
                editIcon.setImageResource(R.drawable.update);
                editIcon.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        // Pass the ID to UpdateDataActivity
                        Intent intent = new Intent(DisplayDataActivity.this, UpdateDataActivity.class);
                        intent.putExtra("id", id);
                        startActivity(intent);
                    }
                });
                TableRow.LayoutParams layoutParams = new TableRow.LayoutParams(40, 40); // Adjust size as needed
                editIcon.setLayoutParams(layoutParams);
                row.addView(editIcon);

                ImageView deleteIcon = new ImageView(this);
                deleteIcon.setImageResource(R.drawable.delete);
                deleteIcon.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        // Handle delete functionality
                        deleteData(id);
                    }
                });
                deleteIcon.setLayoutParams(layoutParams);
                row.addView(deleteIcon);

                tableLayout.addView(row);
            }
        }
    }

    private void deleteData(String id) {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setMessage("Are you sure to delete this data?");
        builder.setPositiveButton("Yes", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                String whereClause = "id = ?";

                String[] whereArgs = new String[]{id};

                int rowsDeleted = db.delete(TABLE_NAME, whereClause, whereArgs);

                if (rowsDeleted > 0) {
                    Toast.makeText(DisplayDataActivity.this, "Data deleted successfully", Toast.LENGTH_SHORT).show();

                    retrieveData();
                } else {
                    Toast.makeText(DisplayDataActivity.this, "Failed to delete data", Toast.LENGTH_SHORT).show();
                }
            }
        });
        builder.setNegativeButton("No", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                dialog.dismiss();
            }
        });
        AlertDialog dialog = builder.create();
        dialog.show();
    }


    private void retrieveData() {
        Cursor cursor = db.rawQuery("SELECT * FROM " + TABLE_NAME, null);
        if (cursor.getCount() == 0) {
            Toast.makeText(DisplayDataActivity.this, "No data found", Toast.LENGTH_SHORT).show();
            return;
        }

        String[] ids = new String[cursor.getCount()];
        String[] names = new String[cursor.getCount()];
        String[] addresses = new String[cursor.getCount()];

        int i = 0;
        while (cursor.moveToNext()) {
            ids[i] = cursor.getString(cursor.getColumnIndex("id"));
            names[i] = cursor.getString(cursor.getColumnIndex("name"));
            addresses[i] = cursor.getString(cursor.getColumnIndex("address"));
            i++;
        }

        cursor.close();

        Intent intent = new Intent(DisplayDataActivity.this, DisplayDataActivity.class);
        intent.putExtra("ids", ids);
        intent.putExtra("names", names);
        intent.putExtra("addresses", addresses);
        startActivity(intent);
        finish();
    }
}

//activity_update_data.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Student Details"
        android:textSize="28dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.479"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.200" />

    <EditText
        android:id="@+id/editTextId"
        android:layout_width="300dp"
        android:layout_height="50dp"
        android:layout_margin="16dp"
        android:hint="Enter Student ID"
        android:inputType="number"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.325" />

    <EditText
        android:id="@+id/editTextName"
        android:layout_width="300dp"
        android:layout_height="50dp"
        android:layout_below="@id/editTextId"
        android:layout_margin="16dp"
        android:hint="Enter Student Name"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.450" />

    <EditText
        android:id="@+id/editTextAddress"
        android:layout_width="300dp"
        android:layout_height="50dp"
        android:layout_below="@id/editTextName"
        android:layout_margin="16dp"
        android:hint="Enter Student Address"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.575" />

    <Button
        android:id="@+id/buttonUpdate"
        android:layout_width="120dp"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:onClick="updateData"
        android:text="Update"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.500"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.725" />

</androidx.constraintlayout.widget.ConstraintLayout>

//UpdateDataActivity.java

package com.example.twelfth_application;

import android.content.ContentValues;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

public class UpdateDataActivity extends AppCompatActivity {
    EditText editTextId, editTextName, editTextAddress;
    Button buttonUpdate;
    private static final String TABLE_NAME = "students";
    private SQLiteDatabase db;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_update_data);

        editTextId = findViewById(R.id.editTextId);
        editTextName = findViewById(R.id.editTextName);
        editTextAddress = findViewById(R.id.editTextAddress);
        buttonUpdate = findViewById(R.id.buttonUpdate);

        DatabaseHelper dbHelper = new DatabaseHelper(this);
        db = dbHelper.getWritableDatabase();

        String id = getIntent().getStringExtra("id");

        if (id != null && !id.isEmpty()) {
            fetchData(id);
        } else {
            Toast.makeText(this, "Invalid ID", Toast.LENGTH_SHORT).show();
            finish();
        }

        buttonUpdate.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                updateData(id);
            }
        });
    }

    private void fetchData(String id) {
        Cursor cursor = db.rawQuery("SELECT * FROM " + TABLE_NAME + " WHERE id = ?", new String[]{id});
        if (cursor.moveToFirst()) {
            int fetchedId = cursor.getInt(cursor.getColumnIndex("id"));
            String name = cursor.getString(cursor.getColumnIndex("name"));
            String address = cursor.getString(cursor.getColumnIndex("address"));

            editTextId.setText(String.valueOf(fetchedId));
            editTextName.setText(name);
            editTextAddress.setText(address);
        } else {
            Toast.makeText(this, "No data found for ID: " + id, Toast.LENGTH_SHORT).show();
            finish();
        }
        cursor.close();
    }

    private void updateData(String id) {
        String name = editTextName.getText().toString().trim();
        String address = editTextAddress.getText().toString().trim();

        ContentValues values = new ContentValues();
        values.put("name", name);
        values.put("address", address);

        int rowsAffected = db.update(TABLE_NAME, values, "id = ?", new String[]{id});
        if (rowsAffected > 0) {
            Toast.makeText(this, "Data updated successfully", Toast.LENGTH_SHORT).show();

            retrieveData();
        } else {
            Toast.makeText(this, "Failed to update data", Toast.LENGTH_SHORT).show();
        }
    }

    private void retrieveData() {
        Cursor cursor = db.rawQuery("SELECT * FROM " + TABLE_NAME, null);
        if (cursor.getCount() == 0) {
            Toast.makeText(UpdateDataActivity.this, "No data found", Toast.LENGTH_SHORT).show();
            return;
        }

        String[] ids = new String[cursor.getCount()];
        String[] names = new String[cursor.getCount()];
        String[] addresses = new String[cursor.getCount()];

        int i = 0;
        while (cursor.moveToNext()) {
            ids[i] = cursor.getString(cursor.getColumnIndex("id"));
            names[i] = cursor.getString(cursor.getColumnIndex("name"));
            addresses[i] = cursor.getString(cursor.getColumnIndex("address"));
            i++;
        }

        cursor.close();

        Intent intent = new Intent(UpdateDataActivity.this, DisplayDataActivity.class);
        intent.putExtra("ids", ids);
        intent.putExtra("names", names);
        intent.putExtra("addresses", addresses);
        startActivity(intent);
    }
}

//activity_show__data.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <EditText
                android:id="@+id/editText"
                android:layout_width="300dp"
                android:layout_height="50dp"
                android:layout_margin="16dp"
                android:layout_gravity="center"
                android:inputType="number"
                android:hint="Enter Student Id to Retrive" />

            <Button
                android:id="@+id/buttonRetrieve"
                android:layout_width="120dp"
                android:layout_height="wrap_content"
                android:layout_margin="16dp"
                android:layout_gravity="center"
                android:text="Search"
                android:onClick="retrieveData" />

            <TableLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:stretchColumns="*">

                <TableRow
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content">

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="ID"
                        android:textStyle="bold"
                        android:padding="8dp" />

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="Name"
                        android:textStyle="bold"
                        android:padding="8dp" />

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="Address"
                        android:textStyle="bold"
                        android:padding="8dp" />
                </TableRow>

            </TableLayout>

            <TableLayout
                android:id="@+id/tableLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:stretchColumns="*">

                <TableRow
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content">

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text=""
                        android:textStyle="bold"
                        android:padding="8dp" />

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text=""
                        android:textStyle="bold"
                        android:padding="8dp" />

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text=""
                        android:textStyle="bold"
                        android:padding="8dp" />
                </TableRow>

            </TableLayout>
        </LinearLayout>
    </ScrollView>
</LinearLayout>

//ShowDataActivity.java

package com.example.twelfth_application;

import androidx.appcompat.app.AppCompatActivity;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.widget.EditText;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;
import android.widget.Toast;

public class ShowDataActivity extends AppCompatActivity {

    EditText editText;
    private static final String TABLE_NAME = "students";
    private SQLiteDatabase db;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_show_data);

        editText = findViewById(R.id.editText);

        DatabaseHelper dbHelper = new DatabaseHelper(this);
        db = dbHelper.getReadableDatabase();

        findViewById(R.id.buttonRetrieve).setOnClickListener(view -> retrieveData());
    }

    private void retrieveData() {
        String studentId = editText.getText().toString().trim();

        if (studentId.isEmpty()) {
            Toast.makeText(this, "Please enter a student ID", Toast.LENGTH_SHORT).show();
            return;
        }

        Cursor cursor = retrieveDataFromDatabase(studentId);

        if (cursor != null && cursor.moveToFirst()) {
            TableLayout tableLayout = findViewById(R.id.tableLayout);
            tableLayout.removeAllViews();

            String[] rowData = {"id", "name", "address"};

            do {
                TableRow row = new TableRow(this);

                for (String data : rowData) {
                    TextView textView = new TextView(this);
                    textView.setText(cursor.getString(cursor.getColumnIndex(data)));
                    textView.setPadding(20, 20, 20, 20);
                    row.addView(textView);
                }

                tableLayout.addView(row);
            } while (cursor.moveToNext());

            cursor.close();
        } else {
            Toast.makeText(this, "No data found for student ID: " + studentId, Toast.LENGTH_SHORT).show();
        }
    }

    private Cursor retrieveDataFromDatabase(String studentId) {
        return db.rawQuery("SELECT * FROM " + TABLE_NAME + " WHERE id = ?", new String[]{studentId});
    }
}

//DatabaseHelper.java

package com.example.twelfth_application;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class DatabaseHelper extends SQLiteOpenHelper {
    private static final String DATABASE_NAME = "student_database";
    private static final int DATABASE_VERSION = 1;
    private static final String TABLE_NAME = "students";
    private static final String COL_ID = "id";
    private static final String COL_NAME = "name";
    private static final String COL_ADDRESS = "address";

    private static final String CREATE_TABLE = "CREATE TABLE " + TABLE_NAME + " ("
            + COL_ID + " INTEGER PRIMARY KEY,"
            + COL_NAME + " TEXT,"
            + COL_ADDRESS + " TEXT)";

    public DatabaseHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        // Create the table
        db.execSQL(CREATE_TABLE);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        // Drop the table if it exists
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
        // Recreate the table
        onCreate(db);
    }
}

//AndroidManifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Twelfth_application"
        tools:targetApi="31">
        <activity
            android:name=".UpdateDataActivity"
            android:exported="false" />
        <activity
            android:name=".ShowDataActivity"
            android:exported="false" />
        <activity
            android:name=".DisplayDataActivity"
            android:exported="false" />
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>
